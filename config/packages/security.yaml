security:
    enable_authenticator_manager: true
    
    password_hashers:
        App\Entity\User:
            algorithm: 'argon2i'

    providers:
        app_user_provider:
            entity:
                class: 'App\Entity\User'
                property: 'email'
    firewalls:
        login:
            entry_point: jwt
            stateless: true
            lazy: true
            switch_user: { role: 'ROLE_SUPER_ADMIN' }
            provider: app_user_provider
            json_login:
                check_path: /authentication
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            refresh_jwt:
                check_path: /api/token/refresh
            jwt: ~
    
    role_hierarchy:
        ROLE_USER: PUBLIC_ACCESS
        ROLE_ADMIN: ROLE_USER
        ROLE_ALLOWED_TO_SWITCH: ROLE_ADMIN
        ROLE_SUPER_ADMIN: ROLE_ALLOWED_TO_SWITCH
        
    access_control:
        - { path: ^/authentication, role: PUBLIC_ACCESS }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
