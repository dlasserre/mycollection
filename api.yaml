openapi: 3.1.0
info:
  title: 'My Collection'
  description: ''
  version: 1.0.0
servers:
  -
    url: /
    description: ''
paths:
  /attachments:
    get:
      operationId: api_attachments_get_collection
      tags:
        - Attachment
      responses:
        200:
          description: 'Attachment collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Attachment.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Attachment resources.'
      description: 'Retrieves the collection of Attachment resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_attachments_post
      tags:
        - Attachment
      responses:
        201:
          description: 'Attachment resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attachment.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Attachment resource.'
      description: 'Creates a Attachment resource.'
      parameters: []
      requestBody:
        description: 'The new Attachment resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Attachment.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/attachments/{id}':
    get:
      operationId: api_attachments_id_get
      tags:
        - Attachment
      responses:
        200:
          description: 'Attachment resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attachment.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Attachment resource.'
      description: 'Retrieves a Attachment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attachment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_attachments_id_put
      tags:
        - Attachment
      responses:
        200:
          description: 'Attachment resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attachment.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Attachment resource.'
      description: 'Replaces the Attachment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attachment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Attachment resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Attachment.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: api_attachments_id_delete
      tags:
        - Attachment
      responses:
        204:
          description: 'Attachment resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Attachment resource.'
      description: 'Removes the Attachment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attachment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_attachments_id_patch
      tags:
        - Attachment
      responses:
        200:
          description: 'Attachment resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attachment.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Attachment resource.'
      description: 'Updates the Attachment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attachment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Attachment resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Attachment'
        required: true
      deprecated: false
    parameters: []
  /attributes:
    get:
      operationId: api_attributes_get_collection
      tags:
        - Attribute
      responses:
        200:
          description: 'Attribute collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Attribute.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Attribute resources.'
      description: 'Retrieves the collection of Attribute resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_attributes_post
      tags:
        - Attribute
      responses:
        201:
          description: 'Attribute resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Attribute resource.'
      description: 'Creates a Attribute resource.'
      parameters: []
      requestBody:
        description: 'The new Attribute resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Attribute.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/attributes/{id}':
    get:
      operationId: api_attributes_id_get
      tags:
        - Attribute
      responses:
        200:
          description: 'Attribute resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Attribute resource.'
      description: 'Retrieves a Attribute resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attribute identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_attributes_id_put
      tags:
        - Attribute
      responses:
        200:
          description: 'Attribute resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Attribute resource.'
      description: 'Replaces the Attribute resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attribute identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Attribute resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Attribute.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: api_attributes_id_delete
      tags:
        - Attribute
      responses:
        204:
          description: 'Attribute resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Attribute resource.'
      description: 'Removes the Attribute resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attribute identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_attributes_id_patch
      tags:
        - Attribute
      responses:
        200:
          description: 'Attribute resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Attribute resource.'
      description: 'Updates the Attribute resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attribute identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Attribute resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Attribute'
        required: true
      deprecated: false
    parameters: []
  /authentication:
    post:
      operationId: login_check_post
      tags:
        - 'Login Check'
      responses:
        200:
          description: 'User token created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { readOnly: true, type: string, nullable: false }
                required:
                  - token
      summary: 'Creates a user token.'
      description: 'Creates a user token.'
      requestBody:
        description: 'The login data'
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  nullable: false
                password:
                  type: string
                  nullable: false
              required:
                - email
                - password
        required: true
    parameters: []
  /collections:
    get:
      operationId: api_collections_get_collection
      tags:
        - Collection
      responses:
        200:
          description: 'Collection collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Collection.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Collection resources.'
      description: 'Retrieves the collection of Collection resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_collections_post
      tags:
        - Collection
      responses:
        201:
          description: 'Collection resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Collection.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Collection resource.'
      description: 'Creates a Collection resource.'
      parameters: []
      requestBody:
        description: 'The new Collection resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Collection.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/collections/{id}':
    get:
      operationId: api_collections_id_get
      tags:
        - Collection
      responses:
        200:
          description: 'Collection resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Collection.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Collection resource.'
      description: 'Retrieves a Collection resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Collection identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_collections_id_put
      tags:
        - Collection
      responses:
        200:
          description: 'Collection resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Collection.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Collection resource.'
      description: 'Replaces the Collection resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Collection identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Collection resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Collection.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: api_collections_id_delete
      tags:
        - Collection
      responses:
        204:
          description: 'Collection resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Collection resource.'
      description: 'Removes the Collection resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Collection identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_collections_id_patch
      tags:
        - Collection
      responses:
        200:
          description: 'Collection resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Collection.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Collection resource.'
      description: 'Updates the Collection resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Collection identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Collection resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      deprecated: false
    parameters: []
  /item_buyers:
    get:
      operationId: api_item_buyers_get_collection
      tags:
        - ItemBuyer
      responses:
        200:
          description: 'ItemBuyer collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ItemBuyer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of ItemBuyer resources.'
      description: 'Retrieves the collection of ItemBuyer resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_item_buyers_post
      tags:
        - ItemBuyer
      responses:
        201:
          description: 'ItemBuyer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ItemBuyer.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ItemBuyer resource.'
      description: 'Creates a ItemBuyer resource.'
      parameters: []
      requestBody:
        description: 'The new ItemBuyer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ItemBuyer.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/item_buyers/{id}':
    get:
      operationId: api_item_buyers_id_get
      tags:
        - ItemBuyer
      responses:
        200:
          description: 'ItemBuyer resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ItemBuyer.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ItemBuyer resource.'
      description: 'Retrieves a ItemBuyer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ItemBuyer identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_item_buyers_id_put
      tags:
        - ItemBuyer
      responses:
        200:
          description: 'ItemBuyer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ItemBuyer.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ItemBuyer resource.'
      description: 'Replaces the ItemBuyer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ItemBuyer identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ItemBuyer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ItemBuyer.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: api_item_buyers_id_delete
      tags:
        - ItemBuyer
      responses:
        204:
          description: 'ItemBuyer resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ItemBuyer resource.'
      description: 'Removes the ItemBuyer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ItemBuyer identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_item_buyers_id_patch
      tags:
        - ItemBuyer
      responses:
        200:
          description: 'ItemBuyer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ItemBuyer.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ItemBuyer resource.'
      description: 'Updates the ItemBuyer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ItemBuyer identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ItemBuyer resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ItemBuyer'
        required: true
      deprecated: false
    parameters: []
  /items:
    get:
      operationId: api_items_get_collection
      tags:
        - Item
      responses:
        200:
          description: 'Item collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Item.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Item resources.'
      description: 'Retrieves the collection of Item resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_items_post
      tags:
        - Item
      responses:
        201:
          description: 'Item resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Item.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Item resource.'
      description: 'Creates a Item resource.'
      parameters: []
      requestBody:
        description: 'The new Item resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Item.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/items/{id}':
    get:
      operationId: api_items_id_get
      tags:
        - Item
      responses:
        200:
          description: 'Item resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Item.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Item resource.'
      description: 'Retrieves a Item resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Item identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_items_id_put
      tags:
        - Item
      responses:
        200:
          description: 'Item resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Item.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Item resource.'
      description: 'Replaces the Item resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Item identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Item resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Item.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: api_items_id_delete
      tags:
        - Item
      responses:
        204:
          description: 'Item resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Item resource.'
      description: 'Removes the Item resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Item identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_items_id_patch
      tags:
        - Item
      responses:
        200:
          description: 'Item resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Item.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Item resource.'
      description: 'Updates the Item resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Item identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Item resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      deprecated: false
    parameters: []
  /prices:
    get:
      operationId: api_prices_get_collection
      tags:
        - Price
      responses:
        200:
          description: 'Price collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Price.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Price resources.'
      description: 'Retrieves the collection of Price resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_prices_post
      tags:
        - Price
      responses:
        201:
          description: 'Price resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Price.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Price resource.'
      description: 'Creates a Price resource.'
      parameters: []
      requestBody:
        description: 'The new Price resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Price.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/prices/{id}':
    get:
      operationId: api_prices_id_get
      tags:
        - Price
      responses:
        200:
          description: 'Price resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Price.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Price resource.'
      description: 'Retrieves a Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_prices_id_put
      tags:
        - Price
      responses:
        200:
          description: 'Price resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Price.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Price resource.'
      description: 'Replaces the Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Price resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Price.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: api_prices_id_delete
      tags:
        - Price
      responses:
        204:
          description: 'Price resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Price resource.'
      description: 'Removes the Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_prices_id_patch
      tags:
        - Price
      responses:
        200:
          description: 'Price resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Price.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Price resource.'
      description: 'Updates the Price resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Price identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Price resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Price'
        required: true
      deprecated: false
    parameters: []
  /users:
    get:
      operationId: api_users_get_collection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_users_post
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/users/{id}':
    get:
      operationId: api_users_id_get
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_users_id_delete
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_users_id_patch
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
          links: {  }
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the User resource.'
      description: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      deprecated: false
    parameters: []
components:
  schemas:
    Attachment:
      type: object
      description: ''
      deprecated: false
      required:
        - type
        - title
        - createdAt
        - updateAt
      properties:
        type:
          type: unknown_type
        item:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        collection:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        title:
          type: string
        description:
          type:
            - string
            - 'null'
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
    Attachment.jsonld:
      type: object
      description: ''
      deprecated: false
      required:
        - type
        - title
        - createdAt
        - updateAt
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          type: unknown_type
        item:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        collection:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        title:
          type: string
        description:
          type:
            - string
            - 'null'
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
    Attribute:
      type: object
      description: ''
      deprecated: false
      properties:
        items:
          type: array
          items:
            type: string
            format: iri-reference
        name:
          type: string
        value:
          type: string
        description:
          type:
            - string
            - 'null'
        public:
          type: boolean
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
      required:
        - name
        - value
        - createdAt
        - updateAt
    Attribute.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        items:
          type: array
          items:
            type: string
            format: iri-reference
        name:
          type: string
        value:
          type: string
        description:
          type:
            - string
            - 'null'
        public:
          type: boolean
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
      required:
        - name
        - value
        - createdAt
        - updateAt
    Collection:
      type: object
      description: ''
      deprecated: false
      properties:
        items:
          type: array
          items:
            type: string
            format: iri-reference
        attachments:
          type: array
          items:
            type: string
            format: iri-reference
        name:
          type: string
        user:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        published:
          type: boolean
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
      required:
        - name
        - createdAt
        - updateAt
    Collection.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        items:
          type: array
          items:
            type: string
            format: iri-reference
        attachments:
          type: array
          items:
            type: string
            format: iri-reference
        name:
          type: string
        user:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        published:
          type: boolean
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
      required:
        - name
        - createdAt
        - updateAt
    Item:
      type: object
      description: ''
      deprecated: false
      properties:
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        attributes:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        attachments:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        title:
          type: string
        description:
          type: string
        price:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
        buyable:
          readOnly: true
          type: boolean
      required:
        - title
        - description
        - createdAt
        - updateAt
    Item.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        attributes:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        attachments:
          type: array
          items:
            type: string
            format: iri-reference
        createdBy:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        title:
          type: string
        description:
          type: string
        price:
          'owl:maxCardinality': 1
          type:
            - string
            - 'null'
          format: iri-reference
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
        buyable:
          readOnly: true
          type: boolean
      required:
        - title
        - description
        - createdAt
        - updateAt
    ItemBuyer:
      type: object
      description: ''
      deprecated: false
      properties:
        item:
          'owl:maxCardinality': 1
          type: string
          format: iri-reference
        buyer:
          'owl:maxCardinality': 1
          type: string
          format: iri-reference
        seller:
          'owl:maxCardinality': 1
          type: string
          format: iri-reference
        id:
          readOnly: true
          type:
            - integer
            - 'null'
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
      required:
        - createdAt
        - updateAt
    ItemBuyer.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        item:
          'owl:maxCardinality': 1
          type: string
          format: iri-reference
        buyer:
          'owl:maxCardinality': 1
          type: string
          format: iri-reference
        seller:
          'owl:maxCardinality': 1
          type: string
          format: iri-reference
        id:
          readOnly: true
          type:
            - integer
            - 'null'
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
      required:
        - createdAt
        - updateAt
    Price:
      type: object
      description: ''
      deprecated: false
      required:
        - price
        - createdAt
        - updateAt
      properties:
        price:
          type: string
        crossedPrice:
          type: string
        id:
          readOnly: true
          type: integer
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
    Price.jsonld:
      type: object
      description: ''
      deprecated: false
      required:
        - price
        - createdAt
        - updateAt
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        price:
          type: string
        crossedPrice:
          type: string
        id:
          readOnly: true
          type: integer
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
    User:
      type: object
      description: ''
      deprecated: false
      properties:
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        items:
          type: array
          items:
            type: string
            format: iri-reference
        civility:
          type: unknown_type
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        birthdayDate:
          externalDocs:
            url: 'https://schema.org/DateTime'
          type:
            - string
            - 'null'
          format: date-time
        roles:
          type: array
          items:
            type: string
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
        fullname:
          readOnly: true
          type: string
      required:
        - civility
        - firstname
        - lastname
        - email
        - createdAt
        - updateAt
    User.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        collections:
          type: array
          items:
            type: string
            format: iri-reference
        items:
          type: array
          items:
            type: string
            format: iri-reference
        civility:
          type: unknown_type
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        birthdayDate:
          externalDocs:
            url: 'https://schema.org/DateTime'
          type:
            - string
            - 'null'
          format: date-time
        roles:
          type: array
          items:
            type: string
        createdAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        updateAt:
          readOnly: true
          externalDocs:
            url: 'https://schema.org/DateTime'
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
        fullname:
          readOnly: true
          type: string
      required:
        - civility
        - firstname
        - lastname
        - email
        - createdAt
        - updateAt
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Value for the Authorization header parameter.'
      name: Authorization
      in: header
security:
  -
    JWT: []
tags: []
